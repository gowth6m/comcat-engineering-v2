datasource db {
    provider = "mongodb"
    url      = env("DATABASE_URL")
}

generator client {
    provider = "prisma-client-js"
}

model product {
    id           String      @id @default(auto()) @map("_id") @db.ObjectId
    name         String
    slug         String
    category     String[]
    image        String
    brand        String
    price        Float
    rating       Float
    numReviews   Int
    countInStock Int
    description  String
    createdAt    DateTime    @default(now())
    updatedAt    DateTime    @updatedAt
    orderItem    orderItem[]
    review       review[]
}

model user {
    id        String   @id @default(auto()) @map("_id") @db.ObjectId
    name      String
    email     String   @unique
    password  String
    isAdmin   Boolean  @default(false)
    createdAt DateTime @default(now())
    updatedAt DateTime @updatedAt
    order     order[]
    review    review[]
}

model order {
    id              String      @id @default(auto()) @map("_id") @db.ObjectId
    user            user        @relation(fields: [userId], references: [id])
    userId          String      @db.ObjectId
    orderItems      orderItem[]
    shippingAddress String
    paymentMethod   String
    paymentResult   String
    taxPrice        Float
    shippingPrice   Float
    totalPrice      Float
    isPaid          Boolean     @default(false)
    paidAt          DateTime
    isDelivered     Boolean     @default(false)
    deliveredAt     DateTime
    createdAt       DateTime    @default(now())
    updatedAt       DateTime    @updatedAt
}

model orderItem {
    id        String  @id @default(auto()) @map("_id") @db.ObjectId
    product   product @relation(fields: [productId], references: [id])
    productId String  @db.ObjectId
    name      String
    image     String
    price     Float
    qty       Int
    order     order?  @relation(fields: [orderId], references: [id])
    orderId   String? @db.ObjectId
}

model review {
    id        String   @id @default(auto()) @map("_id") @db.ObjectId
    user      user     @relation(fields: [userId], references: [id])
    userId    String   @db.ObjectId
    product   product  @relation(fields: [productId], references: [id])
    productId String   @db.ObjectId
    name      String
    rating    Float
    comment   String
    createdAt DateTime @default(now())
    updatedAt DateTime @updatedAt
}
